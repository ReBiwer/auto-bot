version: "3.9"
services:
  postgres:
    container_name: postgres_container
    image: postgres:16.1-alpine3.18
    env_file:
      - .env
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/conf/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - "5432:5432"
    volumes:
      - /var/lib/postgresql/data
      - .:/docker-entrypoint-initdb.d
      - ./postgresql.conf:/etc/postgresql/conf/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USER}"]
      interval: 10s
      timeout: 10s
      retries: 30
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      my_network:
        ipv4_address: 172.18.0.3
  redis:
    image: redis:latest
    env_file:
      - .env
    container_name: redis_container
    expose:
      - ${REDIS_PORT}
    networks:
      my_network:
        ipv4_address: 172.18.0.6
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - redis_data:/data
  app:
    container_name: auto_bot
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    networks:
      - my_network

volumes:
  redis_data:

networks:
  my_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
          gateway: 172.18.0.1